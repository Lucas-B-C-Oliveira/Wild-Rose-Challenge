{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\slots/assets\\scripts\\slots\\Tile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAkC,wBAAY;IAD9C;QAAA,qEAgCC;QA7BS,cAAQ,GAAG,EAAE,CAAC;;IA6BxB,CAAC;IA3BO,qBAAM,GAAZ;uCAAgB,OAAO;;;4BACrB,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;;;;;KAC3B;IAEK,4BAAa,GAAnB;uCAAuB,OAAO;;;4BAC5B,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;wBAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;;;;;KAClB;IAEK,2BAAY,GAAlB;uCAAsB,OAAO;;;gBACrB,IAAI,GAAG,IAAI,CAAC;gBAClB,sBAAO,IAAI,OAAO,CAAU,UAAA,OAAO;wBACjC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,CAAC,WAAW,EAAE,SAAS,SAAS,CAAC,GAAG,EAAE,cAAc;4BACvF,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;4BAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,EAAC;;;KACJ;IAED,sBAAO,GAAP,UAAQ,KAAa;QACnB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvE,CAAC;IAED,wBAAS,GAAT;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC5B,CAAC;IA5BD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CAC9B;IAFH,IAAI;QADxB,OAAO;OACa,IAAI,CA+BxB;IAAD,WAAC;CA/BD,AA+BC,CA/BiC,EAAE,CAAC,SAAS,GA+B7C;kBA/BoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\slots","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Tile extends cc.Component {\r\n  @property({ type: [cc.SpriteFrame], visible: true })\r\n  private textures = [];\r\n\r\n  async onLoad(): Promise<void> {\r\n    await this.loadTextures();\r\n  }\r\n\r\n  async resetInEditor(): Promise<void> {\r\n    await this.loadTextures();\r\n    this.setRandom();\r\n  }\r\n\r\n  async loadTextures(): Promise<boolean> {\r\n    const self = this;\r\n    return new Promise<boolean>(resolve => {\r\n      cc.loader.loadResDir('gfx/Square', cc.SpriteFrame, function afterLoad(err, loadedTextures) {\r\n        self.textures = loadedTextures;\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n\r\n  setTile(index: number): void {\r\n    this.node.getComponent(cc.Sprite).spriteFrame = this.textures[index];\r\n  }\r\n\r\n  setRandom(): void {\r\n    const randomIndex = Math.floor(Math.random() * this.textures.length);\r\n    this.setTile(randomIndex);\r\n  }\r\n}\r\n"]}