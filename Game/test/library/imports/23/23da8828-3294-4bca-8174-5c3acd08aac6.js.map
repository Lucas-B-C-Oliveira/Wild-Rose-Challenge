{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\slots/assets\\scripts\\slots\\Tile.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAA0B,CAAC;AAG5C;IAAkC,wBAAY;IAD9C;QAAA,qEAkEC;QA/DS,cAAQ,GAAG,EAAE,CAAC;QAGd,cAAQ,GAAG,IAAI,CAAC;QAEhB,iBAAW,GAAG,KAAK,CAAC;QAEpB,eAAS,GAAG,CAAC,CAAC;;IAwDxB,CAAC;IAtDC,oBAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAEK,qBAAM,GAAZ;uCAAgB,OAAO;;;4BACrB,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;;;;;KAC3B;IAEK,4BAAa,GAAnB;uCAAuB,OAAO;;;4BAC5B,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;wBAAzB,SAAyB,CAAC;wBAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;;;;;KAClB;IAEK,2BAAY,GAAlB;uCAAsB,OAAO;;;gBACrB,IAAI,GAAG,IAAI,CAAC;gBAClB,sBAAO,IAAI,OAAO,CAAU,UAAA,OAAO;wBACjC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,CAAC,WAAW,EAAE,SAAS,SAAS,CAAC,GAAG,EAAE,cAAc;4BACvF,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;4BAC/B,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,EAAC;;;KACJ;IAED,4BAAa,GAAb,UAAc,KAAc;QAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,+BAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC9B,CAAC;IAED,6BAAc,GAAd,UAAe,KAAc;QAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,6BAAc,GAAd;QACE,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,2BAAY,GAAZ;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAID,sBAAO,GAAP,UAAQ,KAAa;QACnB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,wBAAS,GAAT;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC5B,CAAC;IA9DD;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CAC9B;IAGtB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACM;IALL,IAAI;QADxB,OAAO;OACa,IAAI,CAiExB;IAAD,WAAC;CAjED,AAiEC,CAjEiC,EAAE,CAAC,SAAS,GAiE7C;kBAjEoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\slots","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Tile extends cc.Component {\r\n  @property({ type: [cc.SpriteFrame], visible: true })\r\n  private textures = [];\r\n\r\n  @property(cc.Node)\r\n  private glowAnim = null;\r\n\r\n  private readyToAnim = false;\r\n\r\n  private tileIndex = 0;\r\n\r\n  start(): void {\r\n    this.glowAnim = this.node.getChildByName(\"glow\");\r\n  }\r\n\r\n  async onLoad(): Promise<void> {\r\n    await this.loadTextures();\r\n  }\r\n\r\n  async resetInEditor(): Promise<void> {\r\n    await this.loadTextures();\r\n    this.setRandom();\r\n  }\r\n\r\n  async loadTextures(): Promise<boolean> {\r\n    const self = this;\r\n    return new Promise<boolean>(resolve => {\r\n      cc.loader.loadResDir('gfx/Square', cc.SpriteFrame, function afterLoad(err, loadedTextures) {\r\n        self.textures = loadedTextures;\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n\r\n  setActiveAnim(value: boolean): void {\r\n    this.glowAnim.active = value;\r\n  }\r\n\r\n  getStateGlowAnim(): boolean {\r\n    return this.glowAnim.active;\r\n  }\r\n\r\n  setReadyToAnim(value: boolean): void {\r\n    this.readyToAnim = value;\r\n  }\r\n\r\n  getReadyToAnim(): boolean {\r\n    return this.readyToAnim;\r\n  }\r\n\r\n  getTileIndex(): number {\r\n    return this.tileIndex;\r\n  }\r\n\r\n  \r\n\r\n  setTile(index: number): void {\r\n    this.node.getComponent(cc.Sprite).spriteFrame = this.textures[index];\r\n    this.tileIndex = index;\r\n  }\r\n\r\n  setRandom(): void {\r\n    const randomIndex = Math.floor(Math.random() * this.textures.length);\r\n    this.setTile(randomIndex);\r\n  }\r\n}\r\n"]}